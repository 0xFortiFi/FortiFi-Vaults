{
  "address": "0xfc7427AEb2c76487Aef5c20736C2197F139d898b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wrappedNative",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeCalculator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVaultImplementation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidWithdrawal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoFortress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBricked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        }
      ],
      "name": "DepositToFortress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fortress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20RecoveredFromFortress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "ExtraTokensSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeCalculator",
          "type": "address"
        }
      ],
      "name": "FeeCalculatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeManager",
          "type": "address"
        }
      ],
      "name": "FeeManagerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "FortressCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBricked",
          "type": "bool"
        }
      ],
      "name": "SetStrategyAsBricked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "VaultSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawBrickedFromFortress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromFortress",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_strat",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_wNative",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "depositToFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "extraTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCalc",
      "outputs": [
        {
          "internalType": "contract IFortiFiFeeCalculator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeMgr",
      "outputs": [
        {
          "internalType": "contract IFortiFiFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFortiFiVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fortress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverFromFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "setExtraTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setFeeCalculator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isBricked",
          "type": "bool"
        }
      ],
      "name": "setStrategyBricked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyIsBricked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultToTokenToFortress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1d698e7cc9f1697eaf9dd691cf5ccae7746bff18ae9e6b3c3f2fbcfe45469eee",
  "receipt": {
    "to": null,
    "from": "0x625d271F634eE0804CCc573C4679aA3AeE475B62",
    "contractAddress": "0xfc7427AEb2c76487Aef5c20736C2197F139d898b",
    "transactionIndex": 13,
    "gasUsed": "3430778",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000080000000000400000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000002000020000000000000000000000000000000000000000000000000000000000000000100",
    "blockHash": "0xe50fac3fa44c080b3b096dbc7a25bc401aad822430d675ab68bbb912570554df",
    "transactionHash": "0x1d698e7cc9f1697eaf9dd691cf5ccae7746bff18ae9e6b3c3f2fbcfe45469eee",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 41803269,
        "transactionHash": "0x1d698e7cc9f1697eaf9dd691cf5ccae7746bff18ae9e6b3c3f2fbcfe45469eee",
        "address": "0xfc7427AEb2c76487Aef5c20736C2197F139d898b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000625d271f634ee0804ccc573c4679aa3aee475b62"
        ],
        "data": "0x",
        "logIndex": 26,
        "blockHash": "0xe50fac3fa44c080b3b096dbc7a25bc401aad822430d675ab68bbb912570554df"
      }
    ],
    "blockNumber": 41803269,
    "cumulativeGasUsed": "4351638",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8B414448de8B609e96bd63Dcf2A8aDbd5ddf7fdd",
    "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
    "0xf964894470AfC11037f6BCB38609f77e9EBA9851",
    "0xC15711C7C8DEAc7A360f9B8826E7c151088D0d8C"
  ],
  "numDeployments": 2,
  "solcInputHash": "f8088298b6aa8b2794eaed3160e2ef8a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedNative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeCalculator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWithdrawal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoFortress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBricked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"}],\"name\":\"DepositToFortress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fortress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20RecoveredFromFortress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"ExtraTokensSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCalculator\",\"type\":\"address\"}],\"name\":\"FeeCalculatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"FeeManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"FortressCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBricked\",\"type\":\"bool\"}],\"name\":\"SetStrategyAsBricked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"VaultSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawBrickedFromFortress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromFortress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_strat\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_wNative\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"depositToFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"extraTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCalc\",\"outputs\":[{\"internalType\":\"contract IFortiFiFeeCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMgr\",\"outputs\":[{\"internalType\":\"contract IFortiFiFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFortiFiVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fortress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverFromFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"setExtraTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setFeeCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isBricked\",\"type\":\"bool\"}],\"name\":\"setStrategyBricked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyIsBricked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultToTokenToFortress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawFromFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"depositToFortress(uint256,address,uint256)\":{\"details\":\"If a user has not deposited previously, this function will deploy a FortiFiFortress contract to interact with the underlying strategy for a specific vault receipt token. This allows user deposits to be isolated as many strategies utilize special logic that is dependent on the balance of the address interacting with them.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Base FortiFi Strategy contract for strategies that require native token deposits\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidCaller()\":[{\"notice\":\"Error caused when calling address is not a valid vault \"}],\"InvalidDeposit()\":[{\"notice\":\"Error caused by trying to deposit 0\"}],\"InvalidVaultImplementation()\":[{\"notice\":\"Error when vault does not implement ISAMS or IMASS interface (0xafba703c)\"}],\"InvalidWithdrawal()\":[{\"notice\":\"Error caused by trying to withdraw 0\"}],\"NoFortress()\":[{\"notice\":\"Error caused when trying to withdraw from non-existent fortress\"}],\"StrategyBricked()\":[{\"notice\":\"Error caused when trying to deposit to bricked strategy\"}],\"ZeroAddress()\":[{\"notice\":\"Error caused by using 0 address as a parameter\"}]},\"kind\":\"user\",\"methods\":{\"depositToFortress(uint256,address,uint256)\":{\"notice\":\"Function to deposit\"},\"recoverERC20(address,uint256)\":{\"notice\":\"Emergency function to recover stuck tokens\"},\"recoverFromFortress(address,address,uint256)\":{\"notice\":\"Emergency function to recover stuck tokens from Fortress\"},\"setExtraTokens(address[])\":{\"notice\":\"Set extra reward tokens for strategy\"},\"setFeeCalculator(address)\":{\"notice\":\"Function to set new FortiFiFeeCalculator contract\"},\"setFeeManager(address)\":{\"notice\":\"Function to set new FortiFiFeeManager contract\"},\"setStrategyBricked(bool)\":{\"notice\":\"Set strategy as bricked\"},\"setVault(address,bool)\":{\"notice\":\"Set valid vaults\"},\"withdrawFromFortress(uint256,address,uint256)\":{\"notice\":\"Function to withdraw\"}},\"notice\":\"This contract should be used when a yield strategy requires special logic beyond simple deposit(amount deposit token) and withdraw(receipt tokens to burn). These strategies are designed to only be called by FortiFi SAMS and MASS Vaults.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/FortiFiNativeStrategy.sol\":\"FortiFiNativeStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/fee-calculators/interfaces/IFortiFiFeeCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IFortiFiFeeCalculator Interface by FortiFi\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @title Interface for FortiFiFeeCalculator\\r\\ninterface IFortiFiFeeCalculator {\\r\\n    function getFees(address user, uint256 amount) external view returns(uint256);\\r\\n}\",\"keccak256\":\"0x16e344e0c95704f9c49d93cbc4a8a2604b457cfad9b42964b57eba47a2fd2f27\",\"license\":\"GPL-3.0-only\"},\"contracts/fee-managers/interfaces/IFortiFiFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IFortiFiFeeManager Interface by FortiFi\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @title Interface for FortiFiFeeManager\\r\\ninterface IFortiFiFeeManager {\\r\\n    function collectFees(address token, uint256 amount) external;\\r\\n}\",\"keccak256\":\"0x806f418262cceb182e6f70442d42d1b55c3ab5b0ecad9fc5993b7c07c3d4deb3\",\"license\":\"GPL-3.0-only\"},\"contracts/strategies/FortiFiNativeFortress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiNativeFortress by FortiFi\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"./interfaces/INativeStrategy.sol\\\";\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @notice Error caused by trying to use recoverERC20 to withdraw strategy receipt tokens\\r\\nerror CantWithdrawStrategyReceipts();\\r\\n\\r\\n/// @notice Error caused by using 0 address as a parameter\\r\\nerror ZeroAddress();\\r\\n\\r\\n/// @notice Error caused by trying to deposit 0\\r\\nerror InvalidDeposit();\\r\\n\\r\\n/// @notice Error caused by trying to withdraw 0\\r\\nerror InvalidWithdrawal();\\r\\n\\r\\n/// @notice Error thrown when refunding native token fails\\r\\nerror FailedToRefund();\\r\\n\\r\\n/// @notice Error thrown when deposit token is not wrapped native token\\r\\nerror InvalidDepositToken();\\r\\n\\r\\ninterface IWNative {\\r\\n    function deposit() external payable;\\r\\n    function withdraw(uint256 amount) external;\\r\\n}\\r\\n\\r\\n/// @title Base FortiFi Fortress contract for strategies that require native tokens for deposit\\r\\n/// @notice Fortresses are vault contracts that are specific to an individual vault receipt. By isolating deposits,\\r\\n/// Fortresses allow for balance-specific logic from underlying strategies.\\r\\ncontract FortiFiNativeFortress is Ownable {\\r\\n    using SafeERC20 for IERC20;\\r\\n    INativeStrategy public immutable _strat;\\r\\n    IERC20 public immutable _wNative;\\r\\n\\r\\n    constructor(address _strategy, address _wrappedNative) {\\r\\n        if (_strategy == address(0)) revert ZeroAddress();\\r\\n        if (_wrappedNative == address(0)) revert ZeroAddress();\\r\\n        _strat = INativeStrategy(_strategy);\\r\\n        _wNative = IERC20(_wrappedNative);\\r\\n    }\\r\\n\\r\\n    event DepositMade(uint256 amount, address indexed user);\\r\\n    event WithdrawalMade(address user);\\r\\n    event ERC20Recovered(address indexed to, address indexed token, uint256 amount);\\r\\n\\r\\n    receive() external payable { \\r\\n    }\\r\\n\\r\\n    /// @notice Function to deposit\\r\\n    function deposit(uint256 _amount, address _user) external virtual onlyOwner returns(uint256 _newStratReceipts){\\r\\n        if (_amount == 0) revert InvalidDeposit();\\r\\n        _wNative.safeTransferFrom(msg.sender, address(this), _amount);\\r\\n        uint256 _beforeBalance = _strat.balanceOf(address(this));\\r\\n\\r\\n        // unwrap\\r\\n        IWNative(address(_wNative)).withdraw(_amount);\\r\\n\\r\\n        // deposit to underlying strategy\\r\\n        _strat.deposit{value: _amount}();\\r\\n\\r\\n        // calculate new strategy receipt tokens received\\r\\n        _newStratReceipts = _strat.balanceOf(address(this)) - _beforeBalance;\\r\\n\\r\\n        // refund left over tokens, if any\\r\\n        _refund(_user);\\r\\n\\r\\n        emit DepositMade(_amount, _user);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to withdraw everything from vault\\r\\n    function withdraw(address _user, address[] memory _extraTokens) external virtual onlyOwner {\\r\\n        uint256 _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance == 0) revert InvalidWithdrawal();\\r\\n\\r\\n        _strat.withdraw(_balance);\\r\\n\\r\\n        // ensure no strategy receipt tokens remain\\r\\n        _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance > 0) {\\r\\n            IERC20(address(_strat)).safeTransfer(_user, _balance);\\r\\n        }\\r\\n\\r\\n        uint256 _nativeBalance = address(this).balance;\\r\\n\\r\\n        // wrap\\r\\n        IWNative(address(_wNative)).deposit{value: _nativeBalance}();\\r\\n\\r\\n        // transfer received deposit tokens and refund left over tokens, if any\\r\\n        _wNative.safeTransfer(msg.sender, _nativeBalance);\\r\\n\\r\\n        // transfer extra reward tokens\\r\\n        uint256 _length = _extraTokens.length;\\r\\n        if (_length > 0) {\\r\\n            for(uint256 i = 0; i < _length; i++) {\\r\\n                IERC20 _token = IERC20(_extraTokens[i]);\\r\\n                uint256 _tokenBalance = _token.balanceOf(address(this));\\r\\n                if (_tokenBalance > 0) {\\r\\n                    _token.safeTransfer(msg.sender, _tokenBalance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _refund(_user);\\r\\n\\r\\n        emit WithdrawalMade(_user);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to return strategy receipts to user when strategy is bricked\\r\\n    function withdrawBricked(address _user) external virtual onlyOwner {\\r\\n        uint256 _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance == 0) revert InvalidWithdrawal();\\r\\n\\r\\n        // ensure no strategy receipt tokens remain\\r\\n        _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance > 0) {\\r\\n            IERC20(address(_strat)).safeTransfer(_user, _balance);\\r\\n        }\\r\\n\\r\\n        emit WithdrawalMade(_user);\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens. \\r\\n    function recoverERC20(address _to, address _token, uint256 _amount) external onlyOwner {\\r\\n        if (_token == address(_strat)) revert CantWithdrawStrategyReceipts();\\r\\n        IERC20(_token).safeTransfer(_to, _amount);\\r\\n        emit ERC20Recovered(_to, _token, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Internal function to refund left over tokens from transactions to user who initiated vault transaction\\r\\n    function _refund(address _user) internal {\\r\\n        // Refund left over wrapped native tokens to user, if any\\r\\n        uint256 _wrappedNativeTokenBalance = _wNative.balanceOf(address(this));\\r\\n        if (_wrappedNativeTokenBalance > 0) {\\r\\n            _wNative.safeTransfer(_user, _wrappedNativeTokenBalance);\\r\\n        }\\r\\n\\r\\n        // Refund left over native tokens to user, if any\\r\\n        if (address(this).balance > 0) {\\r\\n            (bool success, ) = payable(_user).call{ value: address(this).balance }(\\\"\\\");\\r\\n\\t\\t    if (!success) revert FailedToRefund();\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xaf2657ed5020ac2cb31b1251062bb0bcf2b3ff777036b510618d38d7a308b9c9\",\"license\":\"MIT\"},\"contracts/strategies/FortiFiNativeStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiNativeStrategy by FortiFi\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"../fee-calculators/interfaces/IFortiFiFeeCalculator.sol\\\";\\r\\nimport \\\"../fee-managers/interfaces/IFortiFiFeeManager.sol\\\";\\r\\nimport \\\"./interfaces/IFortress.sol\\\";\\r\\nimport \\\"./interfaces/IVault.sol\\\";\\r\\nimport \\\"./FortiFiNativeFortress.sol\\\";\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @notice Error when vault does not implement ISAMS or IMASS interface (0xafba703c)\\r\\nerror InvalidVaultImplementation();\\r\\n\\r\\n/// @notice Error caused when calling address is not a valid vault \\r\\nerror InvalidCaller();\\r\\n\\r\\n/// @notice Error caused when trying to withdraw from non-existent fortress\\r\\nerror NoFortress();\\r\\n\\r\\n/// @notice Error caused when trying to deposit to bricked strategy\\r\\nerror StrategyBricked();\\r\\n\\r\\n/// @title Base FortiFi Strategy contract for strategies that require native token deposits\\r\\n/// @notice This contract should be used when a yield strategy requires special logic beyond\\r\\n/// simple deposit(amount deposit token) and withdraw(receipt tokens to burn). These strategies\\r\\n/// are designed to only be called by FortiFi SAMS and MASS Vaults.\\r\\ncontract FortiFiNativeStrategy is Ownable, ERC20 {\\r\\n    using SafeERC20 for IERC20;\\r\\n    address public immutable _strat;\\r\\n    bool public strategyIsBricked;\\r\\n\\r\\n    IERC20 public immutable _wNative;\\r\\n    IFortiFiFeeCalculator public feeCalc;\\r\\n    IFortiFiFeeManager public feeMgr;\\r\\n\\r\\n    address[] public extraTokens;\\r\\n    \\r\\n    mapping(address => bool) public isFortiFiVault;\\r\\n    mapping(address => mapping(uint256 => address)) public vaultToTokenToFortress;\\r\\n\\r\\n    event FortressCreated(address indexed vault, uint256 tokenId, address indexed strategy);\\r\\n    event DepositToFortress(address indexed vault, address indexed user, address indexed strategy, uint256 amountDeposited);\\r\\n    event WithdrawFromFortress(address indexed vault, address indexed user, address indexed strategy, uint256 tokenId, uint256 amountReceived);\\r\\n    event WithdrawBrickedFromFortress(address indexed vault, address indexed user, address indexed strategy, uint256 tokenId);\\r\\n    event VaultSet(address vault, bool approved);\\r\\n    event ExtraTokensSet(address[] tokens);\\r\\n    event SetStrategyAsBricked(bool isBricked);\\r\\n    event ERC20Recovered(address indexed token, uint256 amount);\\r\\n    event ERC20RecoveredFromFortress(address indexed fortress, address indexed token, uint256 amount);\\r\\n    event FeeManagerSet(address feeManager);\\r\\n    event FeeCalculatorSet(address feeCalculator);\\r\\n\\r\\n    constructor(address _strategy, \\r\\n        address _wrappedNative,\\r\\n        address _feeManager,\\r\\n        address _feeCalculator) ERC20(\\\"FortiFi Strategy Receipt\\\", \\\"FFSR\\\") {\\r\\n        if (_strategy == address(0)) revert ZeroAddress();\\r\\n        if (_wrappedNative == address(0)) revert ZeroAddress();\\r\\n        if (_feeManager == address(0)) revert ZeroAddress();\\r\\n        if (_feeCalculator == address(0)) revert ZeroAddress();\\r\\n        _strat = _strategy;\\r\\n        _wNative = IERC20(_wrappedNative);\\r\\n        feeCalc = IFortiFiFeeCalculator(_feeCalculator);\\r\\n        feeMgr = IFortiFiFeeManager(_feeManager);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to deposit\\r\\n    /// @dev If a user has not deposited previously, this function will deploy a FortiFiFortress contract\\r\\n    /// to interact with the underlying strategy for a specific vault receipt token. This allows user deposits to be isolated\\r\\n    /// as many strategies utilize special logic that is dependent on the balance of the address interacting with them.\\r\\n    function depositToFortress(uint256 _amount, address _user, uint256 _tokenId) external virtual {\\r\\n        if (_amount == 0) revert InvalidDeposit();\\r\\n        if (!isFortiFiVault[msg.sender]) revert InvalidCaller();\\r\\n        if (strategyIsBricked) revert StrategyBricked();\\r\\n        _wNative.safeTransferFrom(msg.sender, address(this), _amount);\\r\\n        IFortress _fortress;\\r\\n\\r\\n        // If user has not deposited previously, deploy Fortress\\r\\n        if (vaultToTokenToFortress[msg.sender][_tokenId] == address(0)) {\\r\\n            FortiFiNativeFortress _fort = new FortiFiNativeFortress(_strat, address(_wNative));\\r\\n            _fortress = IFortress(address(_fort));\\r\\n            vaultToTokenToFortress[msg.sender][_tokenId] = address(_fortress);\\r\\n            emit FortressCreated(msg.sender, _tokenId, address(_strat));\\r\\n        } else {\\r\\n            _fortress = IFortress(vaultToTokenToFortress[msg.sender][_tokenId]);\\r\\n        }\\r\\n\\r\\n        // approve and deposit\\r\\n        _wNative.approve(address(_fortress), _amount);\\r\\n        uint256 _receipts = _fortress.deposit(_amount, _user);\\r\\n\\r\\n        // mint receipt tokens equal to what was received from Fortress\\r\\n        _mint(msg.sender, _receipts);\\r\\n\\r\\n        // Refund left over deposit tokens, if any\\r\\n        uint256 _depositTokenBalance = _wNative.balanceOf(address(this));\\r\\n        if (_depositTokenBalance > 0) {\\r\\n            _wNative.safeTransfer(msg.sender, _depositTokenBalance);\\r\\n        }\\r\\n\\r\\n        emit DepositToFortress(msg.sender, _user, address(_strat), _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to withdraw\\r\\n    function withdrawFromFortress(uint256 _amount, address _user, uint256 _tokenId) external virtual {\\r\\n        if (_amount == 0) revert InvalidWithdrawal();\\r\\n        if (vaultToTokenToFortress[msg.sender][_tokenId] == address(0)) revert NoFortress();\\r\\n\\r\\n        // burn receipt tokens and withdraw from Fortress\\r\\n        _burn(msg.sender, _amount);\\r\\n\\r\\n        if(strategyIsBricked) {\\r\\n            IFortress(vaultToTokenToFortress[msg.sender][_tokenId]).withdrawBricked(_user);\\r\\n\\r\\n            emit WithdrawBrickedFromFortress(msg.sender, _user, address(_strat), _tokenId);\\r\\n        } else {\\r\\n            IFortress(vaultToTokenToFortress[msg.sender][_tokenId]).withdraw(_user, extraTokens);\\r\\n\\r\\n            uint256 _depositTokenReceived = _wNative.balanceOf(address(this));\\r\\n\\r\\n            // transfer received deposit tokens\\r\\n            _wNative.safeTransfer(msg.sender, _depositTokenReceived);\\r\\n\\r\\n            // handle fees on extra reward tokens\\r\\n            uint256 _length = extraTokens.length;\\r\\n            if (_length > 0) {\\r\\n                for(uint256 i = 0; i < _length; i++) {\\r\\n                    IERC20 _token = IERC20(extraTokens[i]);\\r\\n                    uint256 _tokenBalance = _token.balanceOf(address(this));\\r\\n                    if (_tokenBalance > 0) {\\r\\n                        uint256 _fee = feeCalc.getFees(_user, _tokenBalance);\\r\\n                        feeMgr.collectFees(extraTokens[i], _fee);\\r\\n                        _token.safeTransfer(_user, _tokenBalance - _fee);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n            emit WithdrawFromFortress(msg.sender, _user, address(_strat), _tokenId, _depositTokenReceived);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Set valid vaults\\r\\n    function setVault(address _vault, bool _approved) external onlyOwner {\\r\\n        if (!IVault(_vault).supportsInterface(0xafba703c)) revert InvalidVaultImplementation();\\r\\n        isFortiFiVault[_vault] = _approved;\\r\\n        emit VaultSet(_vault, _approved);\\r\\n    }\\r\\n\\r\\n    /// @notice Set extra reward tokens for strategy\\r\\n    function setExtraTokens(address[] calldata _tokens) external onlyOwner {\\r\\n        extraTokens = _tokens;\\r\\n        emit ExtraTokensSet(_tokens);\\r\\n    }\\r\\n\\r\\n    /// @notice Set strategy as bricked\\r\\n    function setStrategyBricked(bool _isBricked) external onlyOwner {\\r\\n        strategyIsBricked = _isBricked;\\r\\n        emit SetStrategyAsBricked(_isBricked);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to set new FortiFiFeeManager contract\\r\\n    function setFeeManager(address _contract) external onlyOwner {\\r\\n        if (_contract == address(0)) revert ZeroAddress();\\r\\n        feeMgr = IFortiFiFeeManager(_contract);\\r\\n        emit FeeManagerSet(_contract);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to set new FortiFiFeeCalculator contract\\r\\n    function setFeeCalculator(address _contract) external onlyOwner {\\r\\n        if (_contract == address(0)) revert ZeroAddress();\\r\\n        feeCalc = IFortiFiFeeCalculator(_contract);\\r\\n        emit FeeCalculatorSet(_contract);\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens\\r\\n    function recoverERC20(address _token, uint256 _amount) external onlyOwner {\\r\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\r\\n        emit ERC20Recovered(_token, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens from Fortress\\r\\n    function recoverFromFortress(address _fortress, address _token, uint256 _amount) external onlyOwner {\\r\\n        IFortress(_fortress).recoverERC20(msg.sender, _token, _amount);\\r\\n        emit ERC20RecoveredFromFortress(_fortress, _token, _amount);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x68d7b4b8940eb071f1f60beb366207ebc4887b012c0df429176ad21fd272a3f6\",\"license\":\"MIT\"},\"contracts/strategies/interfaces/IFortress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IFortress Interface by FortiFi\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @title Interface for FortiFi Fortresses\\r\\ninterface IFortress {\\r\\n    function deposit(uint amount, address user) external returns(uint);\\r\\n    function withdraw(address user, address[] memory extraTokens) external;\\r\\n    function withdrawBricked(address user) external;\\r\\n    function recoverERC20(address to, address token, uint amount) external;\\r\\n    function balanceOf(address holder) external view returns(uint256);\\r\\n}\",\"keccak256\":\"0x523a1c83bd007e483dff6b4b41047d4d2a0f61ca6b30e86e57ad5ac876c1575d\",\"license\":\"GPL-3.0-only\"},\"contracts/strategies/interfaces/INativeStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IStrategy Interface by FortiFi\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\n/// @title Interface for basic strategies used by FortiFi SAMS Vaults\\r\\ninterface INativeStrategy {\\r\\n    function approve(address spender, uint amount) external returns (bool);\\r\\n    function deposit() external payable;\\r\\n    function depositToFortress(uint amount, address user, uint tokenId) external;\\r\\n    function withdraw(uint amount) external;\\r\\n    function withdrawFromFortress(uint amount, address user, uint tokenId) external;\\r\\n    function balanceOf(address holder) external view returns(uint256);\\r\\n}\",\"keccak256\":\"0xde766fa14a1c59e6749e970766130dfe6e554f8c14c6c9c851d5a26112deed07\",\"license\":\"GPL-3.0-only\"},\"contracts/strategies/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IVault Interface by FortiFi\\r\\n\\r\\npragma solidity 0.8.21;\\r\\n\\r\\ninterface IVault {\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\",\"keccak256\":\"0x7c2b0149d370f11e2e4a6e80a830c9e4dc1ee889c00a6a46c8d5a6e1a36d18cc\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162003f6e38038062003f6e833981016040819052620000349162000221565b6040518060400160405280601881526020017f466f72746946692053747261746567792052656365697074000000000000000081525060405180604001604052806004815260200163232329a960e11b815250620000a16200009b620001b060201b60201c565b620001b4565b6004620000af838262000323565b506005620000be828262000323565b5050506001600160a01b038416620000e95760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038316620001115760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038216620001395760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038116620001615760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0393841660805291831660a05260068054610100600160a81b0319166101009385169390930292909217909155600780546001600160a01b03191691909216179055620003ef565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200021c57600080fd5b919050565b600080600080608085870312156200023857600080fd5b620002438562000204565b9350620002536020860162000204565b9250620002636040860162000204565b9150620002736060860162000204565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a957607f821691505b602082108103620002ca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031e57600081815260208120601f850160051c81016020861015620002f95750805b601f850160051c820191505b818110156200031a5782815560010162000305565b5050505b505050565b81516001600160401b038111156200033f576200033f6200027e565b620003578162000350845462000294565b84620002d0565b602080601f8311600181146200038f5760008415620003765750858301515b600019600386901b1c1916600185901b1785556200031a565b600085815260208120601f198616915b82811015620003c0578886015182559484019460019091019084016200039f565b5085821015620003df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051613b0562000469600039600081816102fc01528181610778015281816107ef0152818161093801528181610a4901528181610ad60152818161123501526112bc015260008181610410015281816107ce0152818161089701528181610b0001528181611121015261150a0152613b056000f3fe60806040523480156200001157600080fd5b50600436106200020d5760003560e01c80638980f11f1162000125578063b9277d2a11620000af578063ded438f0116200007a578063ded438f014620004f0578063f2fde38b1462000507578063f7c85469146200051e578063fdad531d146200053257600080fd5b8063b9277d2a1462000460578063ba251fba1462000477578063cf950022146200048e578063dd62ed3e14620004b457600080fd5b806395d89b4111620000f057806395d89b411462000400578063963d7e91146200040a578063a457c2d71462000432578063a9059cbb146200044957600080fd5b80638980f11f14620003a75780638c4cc0df14620003be5780638c66d04f14620003d75780638da5cb5b14620003ee57600080fd5b8063313ce56711620001a7578063472d35b91162000172578063472d35b91462000343578063627f66c6146200035a57806370a082311462000371578063715018a6146200039d57600080fd5b8063313ce56714620002e6578063318d494e14620002f657806339509351146200031e578063408555b9146200033557600080fd5b806318160ddd11620001e857806318160ddd14620002755780631d6e077a146200028857806323b872dd14620002b857806329c9aa1914620002cf57600080fd5b806306fdde031462000212578063095ea7b314620002345780630f1cb792146200025c575b600080fd5b6200021c62000569565b6040516200022b9190620020c7565b60405180910390f35b6200024b6200024536600462002119565b62000603565b60405190151581526020016200022b565b620002736200026d36600462002155565b6200061f565b005b6003545b6040519081526020016200022b565b6200029f6200029936600462002175565b6200069d565b6040516001600160a01b0390911681526020016200022b565b6200024b620002c93660046200218f565b620006c8565b62000273620002e0366004620021d0565b620006f2565b604051601281526020016200022b565b6200029f7f000000000000000000000000000000000000000000000000000000000000000081565b6200024b6200032f36600462002119565b62000b7e565b6006546200024b9060ff1681565b6200027362000354366004620021f8565b62000bc1565b620002736200036b36600462002216565b62000c65565b6200027962000382366004620021f8565b6001600160a01b031660009081526001602052604090205490565b6200027362000d86565b62000273620003b836600462002119565b62000dc1565b6006546200029f9061010090046001600160a01b031681565b62000273620003e8366004620021f8565b62000e4c565b6000546001600160a01b03166200029f565b6200021c62000ef8565b6200029f7f000000000000000000000000000000000000000000000000000000000000000081565b6200024b6200044336600462002119565b62000f09565b6200024b6200045a36600462002119565b62000faa565b620002736200047136600462002252565b62000fba565b6200027362000488366004620021d0565b62001029565b6200024b6200049f366004620021f8565b60096020526000908152604090205460ff1681565b62000279620004c5366004620022cc565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b62000273620005013660046200218f565b62001565565b6200027362000518366004620021f8565b6200164f565b6007546200029f906001600160a01b031681565b6200029f6200054336600462002119565b600a6020908152600092835260408084209091529082529020546001600160a01b031681565b6060600480546200057a9062002304565b80601f0160208091040260200160405190810160405280929190818152602001828054620005a89062002304565b8015620005f95780601f10620005cd57610100808354040283529160200191620005f9565b820191906000526020600020905b815481529060010190602001808311620005db57829003601f168201915b5050505050905090565b60003362000613818585620016f1565b60019150505b92915050565b6000546001600160a01b03163314620006555760405162461bcd60e51b81526004016200064c9062002340565b60405180910390fd5b6006805460ff19168215159081179091556040519081527fdd54532339942dad92de40994c97555cc95b2aceb99fdd85a412d20ee0a568b8906020015b60405180910390a150565b60088181548110620006ae57600080fd5b6000918252602090912001546001600160a01b0316905081565b600033620006d885828562001812565b620006e5858585620018a9565b60019150505b9392505050565b826000036200071457604051635972996f60e11b815260040160405180910390fd5b3360009081526009602052604090205460ff1662000745576040516348f5c3ed60e01b815260040160405180910390fd5b60065460ff16156200076a5760405163217ca11f60e21b815260040160405180910390fd5b620007a16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308662001a81565b336000908152600a602090815260408083208484529091528120546001600160a01b0316620008ec5760007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040516200081c9062002014565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000850573d6000803e3d6000fd5b50336000818152600a6020908152604080832088845282529182902080546001600160a01b0319166001600160a01b038681169190911790915591518781529395508594507f0000000000000000000000000000000000000000000000000000000000000000909116927fd54b6c27f4639f28e778312a36befbf189631a3587aeb73e182e99c434eb7705910160405180910390a35062000912565b50336000908152600a602090815260408083208484529091529020546001600160a01b03165b60405163095ea7b360e01b81526001600160a01b038281166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801562000982573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a8919062002375565b50604051636e553f6560e01b8152600481018590526001600160a01b03848116602483015260009190831690636e553f65906044016020604051808303816000875af1158015620009fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a23919062002395565b905062000a31338262001aee565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801562000a99573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000abf919062002395565b9050801562000afe5762000afe6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338362001bd3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316336001600160a01b03167fe15dc988e072c1d9d056206bf4c2ccd15513ea1197955bdb545e39a4a198f6278960405162000b6e91815260200190565b60405180910390a4505050505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490919062000613908290869062000bbb908790620023c5565b620016f1565b6000546001600160a01b0316331462000bee5760405162461bcd60e51b81526004016200064c9062002340565b6001600160a01b03811662000c165760405163d92e233d60e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527fbf5f580614969fb819b8af01f7cc62fe0e0146feaf98d7aee42e76bb0bee8e639060200162000692565b6000546001600160a01b0316331462000c925760405162461bcd60e51b81526004016200064c9062002340565b6040516301ffc9a760e01b8152632bee9c0f60e21b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa15801562000cde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d04919062002375565b62000d2257604051632a4d0ad560e01b815260040160405180910390fd5b6001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527f79a58dadb454da39ecff92b439454719a80ea78743990d0f0dd2343a7e7bb91a91015b60405180910390a15050565b6000546001600160a01b0316331462000db35760405162461bcd60e51b81526004016200064c9062002340565b62000dbf600062001c05565b565b6000546001600160a01b0316331462000dee5760405162461bcd60e51b81526004016200064c9062002340565b62000e046001600160a01b038316338362001bd3565b816001600160a01b03167f505b28e6941631badc363841ecbf8e1214b9379c643936458e87be718e1579998260405162000e4091815260200190565b60405180910390a25050565b6000546001600160a01b0316331462000e795760405162461bcd60e51b81526004016200064c9062002340565b6001600160a01b03811662000ea15760405163d92e233d60e01b815260040160405180910390fd5b60068054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fff482b94e6650f33ebd5a4b656f2524de0c552f315fb3270f47aeaef3d72a63e9060200162000692565b6060600580546200057a9062002304565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091908381101562000f905760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016200064c565b62000f9f8286868403620016f1565b506001949350505050565b60003362000613818585620018a9565b6000546001600160a01b0316331462000fe75760405162461bcd60e51b81526004016200064c9062002340565b62000ff56008838362002022565b507fe1a8a770bbbdcfcba3d04e555cd2aad13f5c7a91e126ee71f5f98bf7405dbecd828260405162000d7a929190620023db565b826000036200104b5760405163c945242d60e01b815260040160405180910390fd5b336000908152600a602090815260408083208484529091529020546001600160a01b03166200108d57604051636987969160e01b815260040160405180910390fd5b62001099338462001c55565b60065460ff16156200119c57336000908152600a60209081526040808320848452909152908190205490516329a5c05560e21b81526001600160a01b0384811660048301529091169063a697015490602401600060405180830381600087803b1580156200110657600080fd5b505af11580156200111b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316336001600160a01b03167f4036930356ede44690c04fdae6fa8e587df3048b8fb1c7e71b2a1e4240d500bf846040516200118f91815260200190565b60405180910390a4505050565b336000908152600a60209081526040808320848452909152908190205490516329380a9b60e11b81526001600160a01b0390911690635270153690620011ea9085906008906004016200242b565b600060405180830381600087803b1580156200120557600080fd5b505af11580156200121a573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa15801562001286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012ac919062002395565b9050620012e46001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338362001bd3565b6008548015620014f25760005b81811015620014f0576000600882815481106200131257620013126200248c565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a0823190602401602060405180830381865afa15801562001366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200138c919062002395565b90508015620014d857600654604051633becdb0560e21b81526001600160a01b038981166004830152602482018490526000926101009004169063efb36c1490604401602060405180830381865afa158015620013ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001413919062002395565b600754600880549293506001600160a01b039091169163a033fcd49190879081106200144357620014436200248c565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b1580156200149857600080fd5b505af1158015620014ad573d6000803e3d6000fd5b50505050620014d6888284620014c49190620024a2565b6001600160a01b038616919062001bd3565b505b50508080620014e790620024b8565b915050620012f1565b505b60408051848152602081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929087169133917f64457f6870de47350bc5d046e00ce2360ff6c68a1596f7393a5a680146d38748910160405180910390a450505b505050565b6000546001600160a01b03163314620015925760405162461bcd60e51b81526004016200064c9062002340565b604051631171bda960e01b81523360048201526001600160a01b03838116602483015260448201839052841690631171bda990606401600060405180830381600087803b158015620015e357600080fd5b505af1158015620015f8573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03167f135171f052c67d036683a0a465a3a0760075fb1402c9387fb0b9ad6e674c38d6836040516200164291815260200190565b60405180910390a3505050565b6000546001600160a01b031633146200167c5760405162461bcd60e51b81526004016200064c9062002340565b6001600160a01b038116620016e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200064c565b620016ee8162001c05565b50565b6001600160a01b038316620017555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200064c565b6001600160a01b038216620017b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200064c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910162001642565b6001600160a01b038381166000908152600260209081526040808320938616835292905220546000198114620018a35781811015620018945760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016200064c565b620018a38484848403620016f1565b50505050565b6001600160a01b0383166200190f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016200064c565b6001600160a01b038216620019735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016200064c565b6001600160a01b03831660009081526001602052604090205481811015620019ed5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016200064c565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929062001a26908490620023c5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405162001a7391815260200190565b60405180910390a3620018a3565b6040516001600160a01b0380851660248301528316604482015260648101829052620018a39085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262001da9565b6001600160a01b03821662001b465760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200064c565b806003600082825462001b5a9190620023c5565b90915550506001600160a01b0382166000908152600160205260408120805483929062001b89908490620023c5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0383166024820152604481018290526200156090849063a9059cbb60e01b9060640162001ab6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821662001cb75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016200064c565b6001600160a01b0382166000908152600160205260409020548181101562001d2d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016200064c565b6001600160a01b038316600090815260016020526040812083830390556003805484929062001d5e908490620024a2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600062001e00826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662001e829092919063ffffffff16565b80519091501562001560578080602001905181019062001e21919062002375565b620015605760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200064c565b606062001e93848460008562001e9b565b949350505050565b60608247101562001efe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200064c565b6001600160a01b0385163b62001f575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200064c565b600080866001600160a01b0316858760405162001f759190620024d4565b60006040518083038185875af1925050503d806000811462001fb4576040519150601f19603f3d011682016040523d82523d6000602084013e62001fb9565b606091505b509150915062001fcb82828662001fd6565b979650505050505050565b6060831562001fe7575081620006eb565b82511562001ff85782518084602001fd5b8160405162461bcd60e51b81526004016200064c9190620020c7565b6115dd80620024f383390190565b82805482825590600052602060002090810192821562002078579160200282015b82811115620020785781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019062002043565b50620020869291506200208a565b5090565b5b808211156200208657600081556001016200208b565b60005b83811015620020be578181015183820152602001620020a4565b50506000910152565b6020815260008251806020840152620020e8816040850160208701620020a1565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146200211457600080fd5b919050565b600080604083850312156200212d57600080fd5b6200213883620020fc565b946020939093013593505050565b8015158114620016ee57600080fd5b6000602082840312156200216857600080fd5b8135620006eb8162002146565b6000602082840312156200218857600080fd5b5035919050565b600080600060608486031215620021a557600080fd5b620021b084620020fc565b9250620021c060208501620020fc565b9150604084013590509250925092565b600080600060608486031215620021e657600080fd5b83359250620021c060208501620020fc565b6000602082840312156200220b57600080fd5b620006eb82620020fc565b600080604083850312156200222a57600080fd5b6200223583620020fc565b91506020830135620022478162002146565b809150509250929050565b600080602083850312156200226657600080fd5b823567ffffffffffffffff808211156200227f57600080fd5b818501915085601f8301126200229457600080fd5b813581811115620022a457600080fd5b8660208260051b8501011115620022ba57600080fd5b60209290920196919550909350505050565b60008060408385031215620022e057600080fd5b620022eb83620020fc565b9150620022fb60208401620020fc565b90509250929050565b600181811c908216806200231957607f821691505b6020821081036200233a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156200238857600080fd5b8151620006eb8162002146565b600060208284031215620023a857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620006195762000619620023af565b60208082528181018390526000908460408401835b8681101562002420576001600160a01b036200240c84620020fc565b1682529183019190830190600101620023f0565b509695505050505050565b60006040820160018060a01b03808616845260206040818601528286548085526060870191508760005282600020945060005b818110156200247e5785548516835260019586019592840192016200245e565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b81810381811115620006195762000619620023af565b600060018201620024cd57620024cd620023af565b5060010190565b60008251620024e8818460208701620020a1565b919091019291505056fe60c06040523480156200001157600080fd5b50604051620015dd380380620015dd833981016040819052620000349162000114565b6200003f33620000a7565b6001600160a01b038216620000675760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381166200008f5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b039182166080521660a0526200014c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010f57600080fd5b919050565b600080604083850312156200012857600080fd5b6200013383620000f7565b91506200014360208401620000f7565b90509250929050565b60805160a0516113f5620001e86000396000818160ca015281816105060152818161058401528181610727015281816107f301528181610ce10152610d6901526000818161019c015281816102330152818161032b015281816103d70152818161044e015281816104d80152818161076701528181610859015281816108e001528181610a2c01528181610ad70152610b5f01526113f56000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101575780638da5cb5b1461016c578063963d7e911461018a578063a6970154146101be578063f2fde38b146101de57600080fd5b80631171bda914610096578063318d494e146100b857806352701536146101095780636e553f651461012957600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b136600461110d565b6101fe565b005b3480156100c457600080fd5b506100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b506100b661012436600461115f565b6102e9565b34801561013557600080fd5b50610149610144366004611237565b6106ce565b604051908152602001610100565b34801561016357600080fd5b506100b66109b4565b34801561017857600080fd5b506000546001600160a01b03166100ec565b34801561019657600080fd5b506100ec7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ca57600080fd5b506100b66101d9366004611263565b6109ea565b3480156101ea57600080fd5b506100b66101f9366004611263565b610bc6565b6000546001600160a01b031633146102315760405162461bcd60e51b81526004016102289061127e565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036102835760405163118539e960e01b815260040160405180910390fd5b6102976001600160a01b0383168483610c61565b816001600160a01b0316836001600160a01b03167faca8fb252cde442184e5f10e0f2e6e4029e8cd7717cae63559079610702436aa836040516102dc91815260200190565b60405180910390a3505050565b6000546001600160a01b031633146103135760405162461bcd60e51b81526004016102289061127e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561037a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039e91906112b3565b9050806000036103c15760405163c945242d60e01b815260040160405180910390fd5b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa15801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c391906112b3565b905080156104ff576104ff6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483610c61565b60004790507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b506105af9350506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915033905083610c61565b825180156106825760005b818110156106805760008582815181106105d6576105d66112cc565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906112b3565b9050801561066b5761066b6001600160a01b0383163383610c61565b50508080610678906112f8565b9150506105ba565b505b61068b85610cc9565b6040516001600160a01b03861681527fd8dee34af5e5ded011300c086d6f9738abc8a1362f5a4c27eb0b5f5d9efd6add9060200160405180910390a15050505050565b600080546001600160a01b031633146106f95760405162461bcd60e51b81526004016102289061127e565b8260000361071a57604051635972996f60e11b815260040160405180910390fd5b61074f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086610e0e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da91906112b3565b604051632e1a7d4d60e01b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561083f57600080fd5b505af1158015610853573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528493507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095591906112b3565b61095f9190611311565b915061096a83610cc9565b826001600160a01b03167fd6dd599afd391d71910ff05250361e65405a896dc557e4e7bf5190b5abbb3816856040516109a591815260200190565b60405180910390a25092915050565b6000546001600160a01b031633146109de5760405162461bcd60e51b81526004016102289061127e565b6109e86000610e4c565b565b6000546001600160a01b03163314610a145760405162461bcd60e51b81526004016102289061127e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906112b3565b905080600003610ac25760405163c945242d60e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a91906112b3565b90508015610b8657610b866001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610c61565b6040516001600160a01b03831681527fd8dee34af5e5ded011300c086d6f9738abc8a1362f5a4c27eb0b5f5d9efd6add9060200160405180910390a15050565b6000546001600160a01b03163314610bf05760405162461bcd60e51b81526004016102289061127e565b6001600160a01b038116610c555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610228565b610c5e81610e4c565b50565b6040516001600160a01b038316602482015260448101829052610cc490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e9c565b505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5491906112b3565b90508015610d9057610d906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610c61565b4715610e0a576000826001600160a01b03164760405160006040518083038185875af1925050503d8060008114610de3576040519150601f19603f3d011682016040523d82523d6000602084013e610de8565b606091505b5050905080610cc457604051631d73cefb60e31b815260040160405180910390fd5b5050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e469085906323b872dd60e01b90608401610c8d565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610ef1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f6e9092919063ffffffff16565b805190915015610cc45780806020019051810190610f0f919061132a565b610cc45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610228565b6060610f7d8484600085610f87565b90505b9392505050565b606082471015610fe85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610228565b6001600160a01b0385163b61103f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610228565b600080866001600160a01b0316858760405161105b9190611370565b60006040518083038185875af1925050503d8060008114611098576040519150601f19603f3d011682016040523d82523d6000602084013e61109d565b606091505b50915091506110ad8282866110b8565b979650505050505050565b606083156110c7575081610f80565b8251156110d75782518084602001fd5b8160405162461bcd60e51b8152600401610228919061138c565b80356001600160a01b038116811461110857600080fd5b919050565b60008060006060848603121561112257600080fd5b61112b846110f1565b9250611139602085016110f1565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561117257600080fd5b61117b836110f1565b915060208084013567ffffffffffffffff8082111561119957600080fd5b818601915086601f8301126111ad57600080fd5b8135818111156111bf576111bf611149565b8060051b604051601f19603f830116810181811085821117156111e4576111e4611149565b60405291825284820192508381018501918983111561120257600080fd5b938501935b8285101561122757611218856110f1565b84529385019392850192611207565b8096505050505050509250929050565b6000806040838503121561124a57600080fd5b8235915061125a602084016110f1565b90509250929050565b60006020828403121561127557600080fd5b610f80826110f1565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112c557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161130a5761130a6112e2565b5060010190565b81810381811115611324576113246112e2565b92915050565b60006020828403121561133c57600080fd5b81518015158114610f8057600080fd5b60005b8381101561136757818101518382015260200161134f565b50506000910152565b6000825161138281846020870161134c565b9190910192915050565b60208152600082518060208401526113ab81604085016020870161134c565b601f01601f1916919091016040019291505056fea2646970667358221220ef7b54f281d2ad185262295ed251cb1504c3e2a8ae2e09f6f3a5b7372f52eb7e64736f6c63430008150033a2646970667358221220235d845ca75de639ede83686d43b23c9879387d80c425b1e73ada583cbdd0c0b64736f6c63430008150033",
  "deployedBytecode": "",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "depositToFortress(uint256,address,uint256)": {
        "details": "If a user has not deposited previously, this function will deploy a FortiFiFortress contract to interact with the underlying strategy for a specific vault receipt token. This allows user deposits to be isolated as many strategies utilize special logic that is dependent on the balance of the address interacting with them."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Base FortiFi Strategy contract for strategies that require native token deposits",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidCaller()": [
        {
          "notice": "Error caused when calling address is not a valid vault "
        }
      ],
      "InvalidDeposit()": [
        {
          "notice": "Error caused by trying to deposit 0"
        }
      ],
      "InvalidVaultImplementation()": [
        {
          "notice": "Error when vault does not implement ISAMS or IMASS interface (0xafba703c)"
        }
      ],
      "InvalidWithdrawal()": [
        {
          "notice": "Error caused by trying to withdraw 0"
        }
      ],
      "NoFortress()": [
        {
          "notice": "Error caused when trying to withdraw from non-existent fortress"
        }
      ],
      "StrategyBricked()": [
        {
          "notice": "Error caused when trying to deposit to bricked strategy"
        }
      ],
      "ZeroAddress()": [
        {
          "notice": "Error caused by using 0 address as a parameter"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "depositToFortress(uint256,address,uint256)": {
        "notice": "Function to deposit"
      },
      "recoverERC20(address,uint256)": {
        "notice": "Emergency function to recover stuck tokens"
      },
      "recoverFromFortress(address,address,uint256)": {
        "notice": "Emergency function to recover stuck tokens from Fortress"
      },
      "setExtraTokens(address[])": {
        "notice": "Set extra reward tokens for strategy"
      },
      "setFeeCalculator(address)": {
        "notice": "Function to set new FortiFiFeeCalculator contract"
      },
      "setFeeManager(address)": {
        "notice": "Function to set new FortiFiFeeManager contract"
      },
      "setStrategyBricked(bool)": {
        "notice": "Set strategy as bricked"
      },
      "setVault(address,bool)": {
        "notice": "Set valid vaults"
      },
      "withdrawFromFortress(uint256,address,uint256)": {
        "notice": "Function to withdraw"
      }
    },
    "notice": "This contract should be used when a yield strategy requires special logic beyond simple deposit(amount deposit token) and withdraw(receipt tokens to burn). These strategies are designed to only be called by FortiFi SAMS and MASS Vaults.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 120,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 126,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 128,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 130,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 132,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 1887,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "strategyIsBricked",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 1893,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "feeCalc",
        "offset": 1,
        "slot": "6",
        "type": "t_contract(IFortiFiFeeCalculator)1349"
      },
      {
        "astId": 1896,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "feeMgr",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IFortiFiFeeManager)1360"
      },
      {
        "astId": 1899,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "extraTokens",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1903,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "isFortiFiVault",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1909,
        "contract": "contracts/strategies/FortiFiNativeStrategy.sol:FortiFiNativeStrategy",
        "label": "vaultToTokenToFortress",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IFortiFiFeeCalculator)1349": {
        "encoding": "inplace",
        "label": "contract IFortiFiFeeCalculator",
        "numberOfBytes": "20"
      },
      "t_contract(IFortiFiFeeManager)1360": {
        "encoding": "inplace",
        "label": "contract IFortiFiFeeManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}