{
  "address": "0x14517a26005f3F92AEa60b6619aC0e10E3A718d1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_depositToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wrappedNative",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        }
      ],
      "name": "DepositToFortress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "FortressCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromFortress",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "depositToFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFortiFiVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fortress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverFromFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultToTokenToFortress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromFortress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x87d70b9b2c8baf2258a79b0371d594d5060c93e954786b3754bc38b5edffd5e5",
  "receipt": {
    "to": null,
    "from": "0x625d271F634eE0804CCc573C4679aA3AeE475B62",
    "contractAddress": "0x14517a26005f3F92AEa60b6619aC0e10E3A718d1",
    "transactionIndex": 1,
    "gasUsed": "2980820",
    "logsBloom": "0x
    "blockHash": "0x8d1e74fa7d6144abac58c0a745918249b4385243e5b18ccb9971f986cfa7e03f",
    "transactionHash": "0x87d70b9b2c8baf2258a79b0371d594d5060c93e954786b3754bc38b5edffd5e5",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 35234731,
        "transactionHash": "0x87d70b9b2c8baf2258a79b0371d594d5060c93e954786b3754bc38b5edffd5e5",
        "address": "0x14517a26005f3F92AEa60b6619aC0e10E3A718d1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000625d271f634ee0804ccc573c4679aa3aee475b62"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x8d1e74fa7d6144abac58c0a745918249b4385243e5b18ccb9971f986cfa7e03f"
      }
    ],
    "blockNumber": 35234731,
    "cumulativeGasUsed": "3012478",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2323dac85c6ab9bd6a8b5fb75b0581e31232d12b",
    "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
    "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"
  ],
  "numDeployments": 5,
  "solcInputHash": "80d871474ab22031d5d53294046de2a3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedNative\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"}],\"name\":\"DepositToFortress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"FortressCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromFortress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"depositToFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFortiFiVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fortress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverFromFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultToTokenToFortress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawFromFortress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"depositToFortress(uint256,address,uint256)\":{\"details\":\"If a user has not deposited previously, this function will deploy a FortiFiDPFortress contract instead of the base FortiFiFortress contract\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Delta Prime FortiFi Strategy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositToFortress(uint256,address,uint256)\":{\"notice\":\"Function to deposit\"},\"depositToken()\":{\"notice\":\"View function to return specified deposit token address\"},\"recoverERC20(address,uint256)\":{\"notice\":\"Emergency function to recover stuck tokens\"},\"recoverFromFortress(address,address,uint256)\":{\"notice\":\"Emergency function to recover stuck tokens from Fortress\"},\"setVault(address,bool)\":{\"notice\":\"Set valid vaults\"},\"strategy()\":{\"notice\":\"View function to return specified underlying strategy address\"},\"withdrawFromFortress(uint256,address,uint256)\":{\"notice\":\"Function to withdraw\"},\"wrappedNativeToken()\":{\"notice\":\"View function to return specified wrapped native token address\"}},\"notice\":\"This contract allows for FortiFi vaults to utilize Delta Prime strategies. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/FortiFiDPStrategy.sol\":\"FortiFiDPStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/strategies/FortiFiDPFortress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiDPFortress by FortiFi\\r\\n\\r\\nimport \\\"./FortiFiFortress.sol\\\";\\r\\nimport \\\"./interfaces/IStrategy.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title FortiFi Fortress contract for Delta Prime strategies\\r\\n/// @notice This Fortress contract is specifically made to interact with Delta Prime strategies\\r\\ncontract FortiFiDPFortress is FortiFiFortress {\\r\\n\\r\\n    constructor(address _strategy, address _depositToken, address _wrappedNative, address _fortiFiStrat) \\r\\n        FortiFiFortress(_strategy, _depositToken, _wrappedNative, _fortiFiStrat) {\\r\\n    }\\r\\n\\r\\n    /// @notice Function to withdraw\\r\\n    /// @dev Delta Prime strategies mint new receipt tokens as accrued interest so in order to calculate total tokens to be burned\\r\\n    /// you must call balanceOf on the strategy, which returns the total balance including interest.\\r\\n    /// This means that total balance will be withdrawn every time withdraw is called.\\r\\n    function withdraw(address _user) external override onlyOwner {\\r\\n        uint256 _balance = _strat.balanceOf(address(this));\\r\\n        require(_balance > 0, \\\"FortiFi: 0 withdraw\\\");\\r\\n        \\r\\n        // withdraw from strategy\\r\\n        _strat.withdraw(_balance);\\r\\n\\r\\n        // ensure no strategy receipt tokens remain\\r\\n        _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance > 0) {\\r\\n            require(_strat.transfer(_user, _balance));\\r\\n        }\\r\\n\\r\\n        // transfer received deposit tokens and refund left over tokens, if any\\r\\n        require(_dToken.transfer(msg.sender, _dToken.balanceOf(address(this))), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n        _refund(_user);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xc098a6db1e8e12226367a7bbf38efbe7cf0820b967013ebd78a6c2221caecf2f\",\"license\":\"MIT\"},\"contracts/strategies/FortiFiDPStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiDPStrategy by FortiFi\\r\\n\\r\\nimport \\\"./FortiFiStrategy.sol\\\";\\r\\nimport \\\"./FortiFiDPFortress.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title Delta Prime FortiFi Strategy contract\\r\\n/// @notice This contract allows for FortiFi vaults to utilize Delta Prime strategies. \\r\\ncontract FortiFiDPStrategy is FortiFiStrategy {\\r\\n\\r\\n    constructor(address _strategy, address _depositToken, address _wrappedNative) \\r\\n        FortiFiStrategy(_strategy, _depositToken, _wrappedNative) {\\r\\n    }\\r\\n\\r\\n    /// @notice Function to deposit\\r\\n    /// @dev If a user has not deposited previously, this function will deploy a FortiFiDPFortress contract\\r\\n    /// instead of the base FortiFiFortress contract\\r\\n    function depositToFortress(uint256 _amount, address _user, uint256 _tokenId) external override {\\r\\n        require(_amount > 0, \\\"FortiFi: 0 deposit\\\");\\r\\n        require(isFortiFiVault[msg.sender], \\\"FortiFi: Invalid vault\\\");\\r\\n        require(_dToken.transferFrom(msg.sender, address(this), _amount), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n        IFortress _fortress;\\r\\n\\r\\n        // If user has not deposited previously, deploy Fortress\\r\\n        if (vaultToTokenToFortress[msg.sender][_tokenId] == address(0)) {\\r\\n            FortiFiDPFortress _fort = new FortiFiDPFortress(_strat, address(_dToken), address(_wNative), address(this));\\r\\n            _fortress = IFortress(address(_fort));\\r\\n            vaultToTokenToFortress[msg.sender][_tokenId] = address(_fortress);\\r\\n            emit FortressCreated(msg.sender, _tokenId, address(_strat));\\r\\n        } else {\\r\\n            _fortress = IFortress(vaultToTokenToFortress[msg.sender][_tokenId]);\\r\\n        }\\r\\n\\r\\n        // approve and deposit\\r\\n        _dToken.approve(address(_fortress), _amount);\\r\\n        uint256 _receipts = _fortress.deposit(_amount, _user);\\r\\n\\r\\n        // mint receipt tokens equal to what was received from Fortress\\r\\n        _mint(msg.sender, _receipts);\\r\\n\\r\\n        // Refund left over deposit tokens, if any\\r\\n        uint256 _depositTokenBalance = _dToken.balanceOf(address(this));\\r\\n        if (_depositTokenBalance > 0) {\\r\\n            require(_dToken.transfer(msg.sender, _depositTokenBalance), \\\"FortiFi: Failed to refund ERC20\\\");\\r\\n        }\\r\\n\\r\\n        emit DepositToFortress(msg.sender, _user, address(_strat), _amount);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x1118c4e6d994440dc6129f7b0ecff8f07629b69e0ed0d83ea0731f11092f3c77\",\"license\":\"MIT\"},\"contracts/strategies/FortiFiFortress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiFortress by FortiFi\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./interfaces/IStrategy.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title Base FortiFi Fortress contract\\r\\n/// @notice Fortresses are vault contracts that are specific to an individual vault receipt. By isolating deposits,\\r\\n/// Fortresses allow for balance-specific logic from underlying strategies.\\r\\ncontract FortiFiFortress is Ownable {\\r\\n    IStrategy internal immutable _strat;\\r\\n    IERC20 internal immutable _dToken;\\r\\n    IERC20 internal immutable _wNative;\\r\\n\\r\\n    constructor(address _strategy, address _depositToken, address _wrappedNative, address _fortiFiStrat) {\\r\\n        require(_strategy != address(0), \\\"FortiFi: Invalid strategy\\\");\\r\\n        require(_depositToken != address(0), \\\"FortiFi: Invalid deposit token\\\");\\r\\n        require(_wrappedNative != address(0), \\\"FortiFi: Invalid native token\\\");\\r\\n        require(_fortiFiStrat != address(0), \\\"FortiFi: Invalid owner\\\");\\r\\n        _strat = IStrategy(_strategy);\\r\\n        _dToken = IERC20(_depositToken);\\r\\n        _wNative = IERC20(_wrappedNative);\\r\\n\\r\\n        // grant approvals\\r\\n        _dToken.approve(_strategy, type(uint256).max);\\r\\n\\r\\n        // owner is the FortiFiStrategy contract that creates this Fortress\\r\\n        _transferOwnership(_fortiFiStrat);\\r\\n    }\\r\\n\\r\\n    receive() external payable { \\r\\n    }\\r\\n\\r\\n    /// @notice Function to deposit\\r\\n    function deposit(uint256 _amount, address _user) external virtual onlyOwner returns(uint256 _newStratReceipts){\\r\\n        require(_amount > 0, \\\"FortiFi: 0 deposit\\\");\\r\\n        require(_dToken.transferFrom(msg.sender, address(this), _amount), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n        uint256 _beforeBalance = _strat.balanceOf(address(this));\\r\\n\\r\\n        // deposit to underlying strategy\\r\\n        _strat.deposit(_amount);\\r\\n\\r\\n        // calculate new strategy receipt tokens received\\r\\n        _newStratReceipts = _strat.balanceOf(address(this)) - _beforeBalance;\\r\\n\\r\\n        // refund left over tokens, if any\\r\\n        _refund(_user);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to withdraw everything from vault\\r\\n    function withdraw(address _user) external virtual onlyOwner {\\r\\n        uint256 _balance = _strat.balanceOf(address(this));\\r\\n        require(_balance > 0, \\\"FortiFi: 0 withdraw\\\");\\r\\n\\r\\n        _strat.withdraw(_balance);\\r\\n\\r\\n        // ensure no strategy receipt tokens remain\\r\\n        _balance = _strat.balanceOf(address(this));\\r\\n        if (_balance > 0) {\\r\\n            require(_strat.transfer(_user, _balance));\\r\\n        }\\r\\n\\r\\n        // transfer received deposit tokens and refund left over tokens, if any\\r\\n        require(_dToken.transfer(msg.sender, _dToken.balanceOf(address(this))), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n        _refund(_user);\\r\\n    }\\r\\n\\r\\n    /// @notice Grant max approval to underlying strategy for deposit token\\r\\n    /// @dev Since Fortresses do not hold deposit tokens for longer than it takes to complete the \\r\\n    /// transaction there should be no risk in granting max approval\\r\\n    function refreshApproval() external {\\r\\n        _dToken.approve(address(_strat), type(uint256).max);\\r\\n    }\\r\\n\\r\\n    /// @notice View function returns specified wrapped native token address\\r\\n    function wrappedNativeToken() external view returns(address) {\\r\\n        return address(_wNative);\\r\\n    }\\r\\n\\r\\n    /// @notice View function returns specified deposit token address\\r\\n    function depositToken() external view returns(address) {\\r\\n        return address(_dToken);\\r\\n    }\\r\\n\\r\\n    /// @notice View function returns specified underlying strategy address\\r\\n    function strategy() external view returns(address) {\\r\\n        return address(_strat);\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens. \\r\\n    function recoverERC20(address _to, address _token, uint256 _amount) external onlyOwner {\\r\\n        IERC20(_token).transfer(_to, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Internal function to refund left over tokens from transactions to user who initiated vault transaction\\r\\n    function _refund(address _user) internal {\\r\\n        // Refund left over deposit tokens to strategy, if any\\r\\n        uint256 _depositTokenBalance = _dToken.balanceOf(address(this));\\r\\n        if (_depositTokenBalance > 0) {\\r\\n            require(_dToken.transfer(msg.sender, _depositTokenBalance), \\\"FortiFi: Failed to refund ERC20\\\");\\r\\n        }\\r\\n\\r\\n        // Refund left over wrapped native tokens to user, if any\\r\\n        uint256 _wrappedNativeTokenBalance = _wNative.balanceOf(address(this));\\r\\n        if (_wrappedNativeTokenBalance > 0) {\\r\\n            require(_wNative.transfer(_user, _wrappedNativeTokenBalance), \\\"FortiFi: Failed to refund native\\\");\\r\\n        }\\r\\n\\r\\n        // Refund left over native tokens to user, if any\\r\\n        if (address(this).balance > 0) {\\r\\n            (bool success, ) = payable(_user).call{ value: address(this).balance }(\\\"\\\");\\r\\n\\t\\t    require(success, \\\"FortiFi: Failed to refund native\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x512da4079fb30c3091992d2ab86697d1d95a52f18e6d9d2b4fab2e04de9ec797\",\"license\":\"MIT\"},\"contracts/strategies/FortiFiStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// FortiFiStrategy by FortiFi\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"./interfaces/IFortress.sol\\\";\\r\\nimport \\\"./FortiFiFortress.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title Base FortiFi Strategy contract\\r\\n/// @notice This contract should be used when a yield strategy requires special logic beyond\\r\\n/// simple deposit(amount deposit token) and withdraw(receipt tokens to burn). These strategies\\r\\n/// are designed to only be called by FortiFi SAMS and MASS Vaults.\\r\\ncontract FortiFiStrategy is Ownable, ERC20 {\\r\\n    address internal immutable _strat;\\r\\n    address internal immutable _wNative;\\r\\n    IERC20 internal immutable _dToken;\\r\\n    \\r\\n\\r\\n    mapping(address => bool) public isFortiFiVault;\\r\\n    mapping(address => mapping(uint256 => address)) public vaultToTokenToFortress;\\r\\n\\r\\n    event FortressCreated(address indexed vault, uint256 tokenId, address indexed strategy);\\r\\n    event DepositToFortress(address indexed vault, address indexed user, address indexed strategy, uint256 amountDeposited);\\r\\n    event WithdrawFromFortress(address indexed vault, address indexed user, address indexed strategy, uint256 amountReceived);\\r\\n\\r\\n    constructor(address _strategy, address _depositToken, address _wrappedNative) ERC20(\\\"FortiFi Strategy Receipt\\\", \\\"FFSR\\\") {\\r\\n        require(_strategy != address(0), \\\"FortiFi: Invalid strategy\\\");\\r\\n        require(_depositToken != address(0), \\\"FortiFi: Invalid deposit token\\\");\\r\\n        require(_wrappedNative != address(0), \\\"FortiFi: Invalid native token\\\");\\r\\n        _strat = _strategy;\\r\\n        _wNative = _wrappedNative;\\r\\n        _dToken = IERC20(_depositToken);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to deposit\\r\\n    /// @dev If a user has not deposited previously, this function will deploy a FortiFiFortress contract\\r\\n    /// to interact with the underlying strategy for a specific vault receipt token. This allows user deposits to be isolated\\r\\n    /// as many strategies utilize special logic that is dependent on the balance of the address interacting with them.\\r\\n    function depositToFortress(uint256 _amount, address _user, uint256 _tokenId) external virtual {\\r\\n        require(_amount > 0, \\\"FortiFi: 0 deposit\\\");\\r\\n        require(isFortiFiVault[msg.sender], \\\"FortiFi: Invalid vault\\\");\\r\\n        require(_dToken.transferFrom(msg.sender, address(this), _amount), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n        IFortress _fortress;\\r\\n\\r\\n        // If user has not deposited previously, deploy Fortress\\r\\n        if (vaultToTokenToFortress[msg.sender][_tokenId] == address(0)) {\\r\\n            FortiFiFortress _fort = new FortiFiFortress(_strat, address(_dToken), address(_wNative), address(this));\\r\\n            _fortress = IFortress(address(_fort));\\r\\n            vaultToTokenToFortress[msg.sender][_tokenId] = address(_fortress);\\r\\n            emit FortressCreated(msg.sender, _tokenId, address(_strat));\\r\\n        } else {\\r\\n            _fortress = IFortress(vaultToTokenToFortress[msg.sender][_tokenId]);\\r\\n        }\\r\\n\\r\\n        // approve and deposit\\r\\n        _dToken.approve(address(_fortress), _amount);\\r\\n        uint256 _receipts = _fortress.deposit(_amount, _user);\\r\\n\\r\\n        // mint receipt tokens equal to what was received from Fortress\\r\\n        _mint(msg.sender, _receipts);\\r\\n\\r\\n        // Refund left over deposit tokens, if any\\r\\n        uint256 _depositTokenBalance = _dToken.balanceOf(address(this));\\r\\n        if (_depositTokenBalance > 0) {\\r\\n            require(_dToken.transfer(msg.sender, _depositTokenBalance), \\\"FortiFi: Failed to refund ERC20\\\");\\r\\n        }\\r\\n\\r\\n        emit DepositToFortress(msg.sender, _user, address(_strat), _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Function to withdraw\\r\\n    function withdrawFromFortress(uint256 _amount, address _user, uint256 _tokenId) external virtual {\\r\\n        require(_amount > 0, \\\"FortiFi: 0 withdraw\\\");\\r\\n        require(vaultToTokenToFortress[msg.sender][_tokenId] != address(0), \\\"FortiFi: No fortress\\\");\\r\\n\\r\\n        // burn receipt tokens and withdraw from Fortress\\r\\n        _burn(msg.sender, _amount);\\r\\n        IFortress(vaultToTokenToFortress[msg.sender][_tokenId]).withdraw(_user);\\r\\n\\r\\n        uint256 _depositTokenReceived = _dToken.balanceOf(address(this));\\r\\n\\r\\n        // transfer received deposit tokens\\r\\n        require(_dToken.transfer(msg.sender, _depositTokenReceived), \\\"FortiFi: Failed to transfer dep.\\\");\\r\\n\\r\\n        emit WithdrawFromFortress(msg.sender, _user, address(_strat), _depositTokenReceived);\\r\\n    }\\r\\n\\r\\n    /// @notice Set valid vaults\\r\\n    function setVault(address _strategy, bool _approved) external onlyOwner {\\r\\n        isFortiFiVault[_strategy] = _approved;\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens\\r\\n    function recoverERC20(address _token, uint256 _amount) external onlyOwner {\\r\\n        IERC20(_token).transfer(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Emergency function to recover stuck tokens from Fortress\\r\\n    function recoverFromFortress(address _fortress, address _token, uint256 _amount) external onlyOwner {\\r\\n        IFortress(_fortress).recoverERC20(msg.sender, _token, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice View function to return specified wrapped native token address\\r\\n    function wrappedNativeToken() external view returns(address) {\\r\\n        return _wNative;\\r\\n    }\\r\\n\\r\\n    /// @notice View function to return specified deposit token address\\r\\n    function depositToken() external view returns(address) {\\r\\n        return address(_dToken);\\r\\n    }\\r\\n\\r\\n    /// @notice View function to return specified underlying strategy address\\r\\n    function strategy() external view returns(address) {\\r\\n        return _strat;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xbc6af5e1421fad976486fffc68388bc3d372338bc3cdc7efbcb205f82dd296c9\",\"license\":\"MIT\"},\"contracts/strategies/interfaces/IFortress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IFortress Interface by FortiFi\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title Interface for FortiFi Fortresses\\r\\ninterface IFortress {\\r\\n    function deposit(uint amount, address user) external returns(uint);\\r\\n    function withdraw(address user) external;\\r\\n    function recoverERC20(address to, address token, uint amount) external;\\r\\n    function balanceOf(address holder) external view returns(uint256);\\r\\n}\",\"keccak256\":\"0x22036abe6374c448fe8dc23d12fda7d39e91cec539ddbbfec58ec6b63f12b9eb\",\"license\":\"GPL-3.0-only\"},\"contracts/strategies/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n// IStrategy Interface by FortiFi\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/// @title Interface for basic strategies used by FortiFi SAMS Vaults\\r\\ninterface IStrategy {\\r\\n    function approve(address spender, uint amount) external returns (bool);\\r\\n    function deposit(uint amount) external;\\r\\n    function depositToFortress(uint amount, address user, uint tokenId) external;\\r\\n    function transferFrom(address from, address to, uint amount) external returns(bool);\\r\\n    function transfer(address to, uint amount) external returns(bool);\\r\\n    function withdraw(uint amount) external;\\r\\n    function withdrawFromFortress(uint amount, address user, uint tokenId) external;\\r\\n    function balanceOf(address holder) external view returns(uint256);\\r\\n}\",\"keccak256\":\"0xdbbdcb588c8be1b72a5585736c8c6013a2c928df5969bda1e4e79ca05ecf7252\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "depositToFortress(uint256,address,uint256)": {
        "details": "If a user has not deposited previously, this function will deploy a FortiFiDPFortress contract instead of the base FortiFiFortress contract"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Delta Prime FortiFi Strategy contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "depositToFortress(uint256,address,uint256)": {
        "notice": "Function to deposit"
      },
      "depositToken()": {
        "notice": "View function to return specified deposit token address"
      },
      "recoverERC20(address,uint256)": {
        "notice": "Emergency function to recover stuck tokens"
      },
      "recoverFromFortress(address,address,uint256)": {
        "notice": "Emergency function to recover stuck tokens from Fortress"
      },
      "setVault(address,bool)": {
        "notice": "Set valid vaults"
      },
      "strategy()": {
        "notice": "View function to return specified underlying strategy address"
      },
      "withdrawFromFortress(uint256,address,uint256)": {
        "notice": "Function to withdraw"
      },
      "wrappedNativeToken()": {
        "notice": "View function to return specified wrapped native token address"
      }
    },
    "notice": "This contract allows for FortiFi vaults to utilize Delta Prime strategies. ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1567,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1573,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1575,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1577,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1579,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 7422,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "isFortiFiVault",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7428,
        "contract": "contracts/strategies/FortiFiDPStrategy.sol:FortiFiDPStrategy",
        "label": "vaultToTokenToFortress",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}